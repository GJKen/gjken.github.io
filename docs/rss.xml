<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://gjken.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://gjken.github.io</link></image><lastBuildDate>Mon, 11 Nov 2024 16:17:28 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title>Gmeek - 记录使用过程</title><link>https://gjken.github.io/post/Gmeek%20-%20-ji-lu-shi-yong-guo-cheng.html</link><description>[Gmeek](https://github.com/Meekdai/Gmeek) 博客完全依托 Github, 提供域名, 无需服务器, 比起传统的服务器建站更方便快捷.&#13;
&#13;
# 搭建博客&#13;
&#13;
**如何搭建博客我就不写了, 强烈建议看完官方的文档**&#13;
&#13;
搭建详情请看官方文档: https://blog.meekdai.com/tag.html#gmeek&#13;
&#13;
**这里主要记录一些 js 和 CSS 的修改.**&#13;
&#13;
&gt; [!WARNING]&#13;
&gt; 利用 Github Page 搭建的网站内容是完全公开的, 请注意不要上传自己的隐私!!!&#13;
&#13;
# Config.json 小妙用&#13;
&#13;
## subTitle - js插入&#13;
&#13;
代码:&#13;
&#13;
```json&#13;
'subTitle':'&lt;script&gt;document.getElementById('content').innerHTML = `&lt;div style='text-align: center;'&gt;&lt;p&gt;CV工程师,&lt;/p&gt;&lt;p&gt;一个又菜又爱玩, 喜欢瞎折腾的流浪者.&lt;/p&gt;&lt;/div&gt;`;&lt;/script&gt;',&#13;
```&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-html&lt;img src='https://i0.img2ipfs.com/ipfs/QmPJLQrhBg9opKvbgNGqQaEopEKJnsH3thbH7wNbocp6VF'&gt;`&#13;
&#13;
从图中可以看到, 可用 js 插入 html 实现修改文字.&#13;
&#13;
## subTitle - 隐藏&#13;
&#13;
'subTitle':' ',&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-html&lt;img src='https://i0.img2ipfs.com/ipfs/Qmei764zAMx9fXgotWbrrwizXRsrk42GGiKor2Zqo8hFgy'&gt;`&#13;
&#13;
可以用空白字符的方式, 隐藏 subTitle 必须字段, 无需使用 js 隐藏.&#13;
&#13;
# 记录功能块代码&#13;
&#13;
代码摘抄自网络, 有删改, 都存放在仓库, 使用 jsdelivr CDN 加速.&#13;
&#13;
## [ArticleToc.js](https://github.com/GJKen/gjken.github.io/blob/main/static/ArticleToc.js) - 文章增加目录列表+一键返回顶部按钮&#13;
&#13;
&gt; 来源: [Github](https://github.com/cao-gift/cao-gift.github.io?tab=readme-ov-file)&#13;
&gt; 修改-切换博客主题时颜色不一致, 增加滚动同步定位章节, 修改动画和样式.&#13;
&gt; 已知bug: 给body增加`backdrop-filter: blur(30px);`样式时, 会出现滚动错误. 待后续修复.&#13;
&#13;
图示:&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/QmZZc1AEpcDTUiasyp6qkGx4h2K7btob9U4c9RAgrTMnx1'&gt;`&#13;
&#13;
## [lightbox-gjken.js](https://github.com/GJKen/gjken.github.io/blob/main/static/lightbox-gjken.js) - 灯箱&#13;
&#13;
&gt; 来源: [Github](https://github.com/tiengming/tiengming.github.io)&#13;
&gt; 修改-增加图片拖动, 增加点击图片外部退出灯箱.&#13;
&gt; 已知 bug: 当图片缩放过后,再对图片拖动会有微小偏差,~~我代码能力实在是太菜了😭~~.&#13;
&#13;
通过点击可大图浏览文章中的图片, 适合一些图片较多的文章.&#13;
&#13;
Windows 端通过 Ctrl+滚轮放大, 同时滚轮可左右切换图片.&#13;
&#13;
Android 端可通过滑动屏幕左右切换图片.&#13;
&#13;
## [GmeekVercount_uv.js](https://github.com/GJKen/gjken.github.io/blob/main/static/GmeekVercount_uv.min.js) - 网站增加访客计数器&#13;
&#13;
&gt; Vercount [Github](https://github.com/EvanNotFound/vercount)&#13;
&gt; pv 修改成 uv 计数&#13;
&#13;
建议放入`allHead`里全站添加 js.&#13;
&#13;
```json&#13;
'allHead':'&lt;script src='https://cdn.jsdelivr.net/gh/gjken/gjkdemo.github.io@main/static/GmeekVercount_uv.min.js'&gt;&lt;/script&gt;'&#13;
```&#13;
&#13;
## [ImgLazyLoad.js](https://github.com/GJKen/gjken.github.io/blob/main/static/ImgLazyLoad.js) - 图片懒加载&#13;
&#13;
&gt; 来源: [Github](https://github.com/liyifanniubi/liyifanniubi.github.io)&#13;
&#13;
未实际测试过.&#13;
&#13;
## [NumPagination.js](https://github.com/GJKen/gjken.github.io/blob/main/static/NumPagination.js) - 主页添加数字分页条&#13;
&#13;
&gt; 来源 [Github](https://github.com/liyifanniubi/liyifanniubi.github.io)&#13;
&#13;
未实际测试过.&#13;
&#13;
# 修改网站样式&#13;
&#13;
[primer.css](https://github.com/GJKen/gjken.github.io/blob/main/static/primer.css), 这个文件用来控制网站的整体样式, 存放在我的 git 仓库, 使用 jsdelivr CDN 加速.&#13;
对应的选择器只张贴出关键 CSS 部分的修改, ~~不然代码太多了.~~&#13;
&#13;
##  \&lt;html&gt; 样式&#13;
&#13;
`[data-color-mode]`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode] {&#13;
    color: var(--fgColor-default, var(--color-fg-default));&#13;
    background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --html-bgColor: #151c2f;/* 增加 */&#13;
}&#13;
:root {&#13;
    --html-bgColor: #fff;/* 增加 */&#13;
}&#13;
[data-color-mode] {&#13;
    background-color: var(--html-bgColor)&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 博客 滚动条 样式&#13;
&#13;
因为默认的 primer.css 里没有写, 所以下面都是增加代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```css&#13;
::-webkit-scrollbar {&#13;
    width: 10px;&#13;
    height: 10px;&#13;
}&#13;
&#13;
::-webkit-scrollbar-thumb {&#13;
    border-radius: 10px;&#13;
    background: #9fc6e3;&#13;
}&#13;
&#13;
/* Firefox */&#13;
html {&#13;
    scrollbar-color: #9fc6e3 transparent;&#13;
    scrollbar-width: thin;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## \#header 样式&#13;
&#13;
`#header`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改顶部为 flex 居中布局, 更加美观.&#13;
&gt; 修改头像 hover 样式.&#13;
&gt; 修改之后无论是博客首页还是文章页都能生效.&#13;
&#13;
因为默认的 primer.css 里没有写, 所以下面都是增加代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```css&#13;
/* 优化header样式 */&#13;
#header {&#13;
    flex-direction: column !important;&#13;
    align-items: center !important;&#13;
    gap: 10px;&#13;
    padding-bottom: 0 !important;&#13;
    margin-bottom: 24px !important&#13;
}&#13;
&#13;
/* 优化头像样式 */&#13;
#header h1 {&#13;
    display: flex;&#13;
    flex-direction: column !important;&#13;
    align-items: center !important;&#13;
    gap: 15px&#13;
}&#13;
&#13;
#header h1 a {&#13;
    margin: unset !important;&#13;
}&#13;
&#13;
.avatar:hover {&#13;
    transform: scale(1.5) rotate(720deg) !important;&#13;
    box-shadow: 0 0 10px rgb(45 250 255 / 74%);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## \#header 图标样式&#13;
&#13;
`.btn-invisible:hover, .btn-invisible.zeroclipboard-is-hover`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改图标 hover 样式.&#13;
&gt; 修改之后无论是博客首页还是文章页都能生效.&#13;
&#13;
因为默认的 primer.css 里没有写, 所以下面都是增加代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.btn-invisible:hover,&#13;
.btn-invisible.zeroclipboard-is-hover {&#13;
    color: var(--fgColor-accent, var(--color-accent-fg));&#13;
    background-color: var(--button-default-bgColor-hover, var(--color-btn-hover-bg));&#13;
    outline: none;&#13;
    box-shadow: none&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
.btn-invisible:hover,&#13;
.btn-invisible.zeroclipboard-is-hover {&#13;
    color: var(--fgColor-accent, var(--color-accent-fg));&#13;
    background-color: var(--title-right-btnbg-color);&#13;
    outline: none;&#13;
    box-shadow: none&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 主页文章列表样式&#13;
&#13;
`.SideNav-item:last-child`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 直接移除这个选择器的所有样式&#13;
&#13;
## 文章 \&lt;code&gt; 标签样式&#13;
&#13;
`.markdown-body code, .markdown-body tt`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body code,&#13;
.markdown-body tt {&#13;
    background-color: var(--bgColor-neutral-muted, var(--color-neutral-muted));&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --markdown-code-color: #3bf6ff52;/* 增加 */&#13;
}&#13;
:root {&#13;
    --markdown-code-color: #4d4d4d38;/* 增加 */&#13;
}&#13;
.markdown-body code,&#13;
.markdown-body tt {&#13;
    background-color: var(--markdown-code-color);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;h1&gt; 标签的样式&#13;
&#13;
`.markdown-body h1`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h1 {&#13;
    padding-bottom: .3em;&#13;
    font-size: 2em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --markdown-h1-bgColor: #7dc2ff7a;/* 增加 */&#13;
}&#13;
:root {&#13;
    --markdown-h1-bgColor: #c8e5ff7a;/* 增加 */&#13;
}&#13;
.markdown-body h1 {&#13;
    background: var(--markdown-h1-bgColor);&#13;
    border-radius: 6px;&#13;
    font-size: 2em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted));&#13;
	border-left: .25em solid #32c7dd;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;h2&gt; 标签样式&#13;
&#13;
`.markdown-body h2`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 增加下划线动画.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h2 {&#13;
    padding-bottom: .3em;&#13;
    font-size: 1.5em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h2 {&#13;
    font-size: 1.5em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted));&#13;
    background: linear-gradient(45deg, #90d1ff, transparent) no-repeat left bottom;&#13;
    background-size: 0 2px;&#13;
    -webkit-transition: all 0.25s ease;&#13;
    transition: all 0.25s ease;&#13;
}&#13;
/* 增加hover */&#13;
.markdown-body h2:hover {&#13;
    background-size: 100% 2px;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;img&gt; 标签样式&#13;
&#13;
`.markdown-body img`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body img {&#13;
    background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection &#13;
    --markdown-imgShadow: #b8fffc29;/* 增加 */&#13;
}&#13;
:root {&#13;
    --markdown-imgShadow: #0000000d;/* 增加 */&#13;
}&#13;
.markdown-body img {&#13;
    box-shadow: 0 4px 8px 0 var(--markdown-imgShadow), 0 -4px 8px 0 var(--markdown-imgShadow);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;a&gt; 标签样式&#13;
&#13;
`a`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&gt; 去掉原下划线, 增加下划线动画.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --color-accent-fg: #2f81f7;&#13;
}&#13;
a {&#13;
    background-color: rgba(0, 0, 0, 0)&#13;
}&#13;
a:hover {&#13;
    text-decoration: underline&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --color-accent-fg: #20d4ff;&#13;
}&#13;
a {&#13;
    text-decoration: none !important;&#13;
    background: #0000;&#13;
    background: linear-gradient(#90d1ff, #90d1ff) no-repeat left bottom;&#13;
    background-size: 0 2px;&#13;
    -webkit-transition: all 0.25s ease;&#13;
    transition: all 0.25s ease;&#13;
}&#13;
a:hover {&#13;
    background-size: 100% 2px;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
# 通过 Gmeek 仓库, 修改 CSS&#13;
&#13;
为什么这样做? ~~自娱自乐.~~&#13;
&#13;
## Fork Gmeek 仓库&#13;
&#13;
仓库地址👉 https://github.com/Meekdai/Gmeek&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/QmaJMN2pqoQwtA3c8bPbajkwWYAwaAcwbzUqBiXya836PV'&gt;`&#13;
&#13;
fork 之后, 转到搭建博客的 github 源码,&#13;
&#13;
打开`.github/workflows/Gmeek.yml`文件, 修改构建博客仓库的地址为你自己的仓库地址&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/QmNa2H5MrVphqpUwAHWBv7iWw782HmDb7qjZb3JEzdjQav'&gt;`&#13;
&#13;
打开`config.json`文件, 修改成`'GMEEK_VERSION':'main'`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 如果值是`last`的话, Action 会失败, 因为默认值`last`是靠源码仓库(Gmeek)的 tag 来构建的, 改成 main 就不会构建失败.&#13;
&gt; ~~创建新的 tag 也可以, 但是挺麻烦.~~&#13;
&#13;
## Gmeek.py&#13;
&#13;
打开`Gmeek.py`, 开始修改~&#13;
&#13;
### 网站下方的文字&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmQBwVgptWtvi36WWnoRmriPPsvezJq7Ui8oL47BehWvTh'&gt;`&#13;
&#13;
### 修改默认 primer.css 链接&#13;
&#13;
`Gmeek-html&lt;img src='https://ipfs.mbzj.org/ipfs/QmWcdviYe3A5bmtjCjhFeFA8VaczcvTQ2HDMB5aUAnkg3v'&gt;`&#13;
&#13;
这里我直接写改成我存放的链接 https://gjken.github.io/primer.css&#13;
&#13;
## 修改页面头部样式&#13;
&#13;
### 打开 post.html 文件&#13;
&#13;
定位样式`.title-right`, 其内容全部修改为flex布局`.title-right{display:flex;}`&#13;
&#13;
增加样式`.title-left{display: flex;flex-direction: column;align-items: center;gap: 20px;}`&#13;
&#13;
定位样式`.title-left a`, 删除`margin-left:8px;`, 设置flex布局之后取消图标多余的间距, 样式则通过 &lt;a href='## \#header 图标样式'&gt;primer.css&lt;/a&gt; 来修改.&#13;
&#13;
定位样式`.title-right .circle`, 删除`margin-right:8px;`, 和上面一样, 删除多余间距.&#13;
&#13;
定位样式`.avatar:hover`,其内容全部修改`.avatar:hover {transform: scale(1.5) rotate(720deg);box-shadow: 0 0 10px rgb(45 250 255 / 74%);}`&#13;
&#13;
### 打开 plist.html 文件&#13;
&#13;
定位样式`.title-right .circle`, 删除`margin-right:8px;`, 和上面一样, 删除多余间距.&#13;
&#13;
到这里我的自定义 header 就修改完成了, 剩下的到 primer.css 改.&#13;
&#13;
## 修改[警报强调信息]样式&#13;
&#13;
# 使用 Gmeek-html 自定义标签, 给博客插入图片, 防止链接自动转换&#13;
&#13;
Github 在 issues 插入的图片也会自动转换为 Github 的地址.&#13;
为了文章的多样性, 在 Gmeek 的 `v2.19` 版本中添加了支持 html 标签的功能.&#13;
示例代码:&#13;
&#13;
```html&#13;
`Gmeek-html&lt;img src='https://img.jpg' style='text-align: center;'&gt;`&#13;
```&#13;
&#13;
实际展示:&#13;
&#13;
`Gmeek-html&lt;img src='https://cdn.img2ipfs.com/ipfs/Qme1BvwvqLcS86jQqwfxVEFrdNPusCqRn3APhdHGEKLtDb' style='text-align: center;'&gt;`&#13;
&#13;
# 添加自定义单篇文章代码&#13;
&#13;
```html&#13;
&lt;span id='busuanzi'&gt;&#13;
:heart:感谢第&lt;span&gt;&lt;/span&gt;小伙伴的&lt;span&gt;&lt;/span&gt;次访问关于页面.&#13;
&lt;/span&gt;&#13;
&#13;
&lt;!-- ##{'script':'&lt;script&gt;document.getElementById('user-content-busuanzi').id='busuanzi_container_site_uv';busuanzi=document.getElementById('busuanzi_container_site_uv');busuanzi.style.display='none';busuanzi.childNodes[1].id='busuanzi_value_site_uv';busuanzi.childNodes[3].id='busuanzi_value_site_pv';&lt;/script&gt;&lt;script async src='//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js'&gt;&lt;/script&gt;','style':'&lt;style&gt;#busuanzi_value_site_uv{color:red}#busuanzi_value_site_pv{color:red}&lt;/style&gt;'}## --&gt;&#13;
```&#13;
&#13;
# Readme.md&#13;
&#13;
📄 &gt; 文章总数&#13;
💬 &gt; 评论总数&#13;
🌺 &gt; 是统计的所有文章的字符数&#13;
⏰ &gt; 最后一次 Actions 的时间&#13;
。</description><guid isPermaLink="true">https://gjken.github.io/post/Gmeek%20-%20-ji-lu-shi-yong-guo-cheng.html</guid><pubDate>Sun, 10 Nov 2024 16:22:46 +0000</pubDate></item></channel></rss>