<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>GJKen</title><link>https://gjken.github.io</link><description> </description><copyright>GJKen</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://s2.loli.net/2024/11/13/DNHrdGTfphzQOok.webp</url><title>avatar</title><link>https://gjken.github.io</link></image><lastBuildDate>Thu, 14 Nov 2024 10:28:14 +0000</lastBuildDate><managingEditor>GJKen</managingEditor><ttl>60</ttl><webMaster>GJKen</webMaster><item><title>免费CDN- jsDelivr+Github 使用方法</title><link>https://gjken.github.io/post/3.html</link><description># jsDelivr 官网&#13;
&#13;
&gt; https://www.jsdelivr.com&#13;
&#13;
# 先决条件&#13;
&#13;
必须要创建一个 GitHub 仓库, 并且存放你需要加速的文件.&#13;
&#13;
# 创建版本号&#13;
&#13;
进入仓库点击 Releases.&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmezvVPRyL9frLHxBtG5SnuxNLjxwN6tbHDTPK7zhYeSM7'&gt;`&#13;
&#13;
简单命名版本&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/Qmb81JPfuBkDAaVSSFSNEC31q6nPfQw3BeTWK48u96kAza'&gt;`&#13;
&#13;
# 创建标签(Tags)&#13;
&#13;
创建 Tags 和 Releases 步骤一样, 下图是入口.&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmbpnHcxKXJNYuEvrT5tg4CwAiJNgpc3BRNE7h6ebhYgsK'&gt;`&#13;
&#13;
# 使用方法&#13;
&#13;
例如:&#13;
&#13;
`https://cdn.jsdelivr.net/gh/[GitHub用户名]/[仓库名]@[版本号或者标签]/[文件路径]`&#13;
&#13;
https://cdn.jsdelivr.net/gh/gjken/gjken.github.io/static/primer.min.css&#13;
&#13;
&gt; [!Important]&#13;
&gt; 省略版本号, 直接访问最新的资源, 不推荐在生产环境中使用.&#13;
&gt; 如果源文件更新, cdn 加速后的文件内容不会更新那么快, 一般有12小时的延迟, ~~大概?~~&#13;
&#13;
# 其它替代地址&#13;
&#13;
Jsdelivr 国内的 CDN 服务被 DNS 污染了, 被指向了Google, Twitter 和 Facebook 的 IP 地址, 导致使用 CDN 服务加速的链接访问失败.&#13;
&#13;
```css&#13;
fastly.jsdelivr.net&#13;
gcore.jsdelivr.net&#13;
testingcf.jsdelivr.net&#13;
test1.jsdelivr.net&#13;
```&#13;
&#13;
| Key | Value&#13;
| - | -&#13;
| [GitHub 用户名] | 写你的 GitHub 用户名.&#13;
| [仓库名]  | 写你的 GitHub 仓库名称.&#13;
| [标签或分支] | 例如 `https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js`&lt;br&gt;都不写默认访问最新版本.&lt;/br&gt;&#13;
| [文件路径] | 写你的 GitHub 仓库文件路径.。</description><guid isPermaLink="true">https://gjken.github.io/post/3.html</guid><pubDate>Tue, 12 Nov 2024 18:47:23 +0000</pubDate></item><item><title>纪念下SAO通关-2024-11-07</title><link>https://gjken.github.io/post/2.html</link><description>Twitter[@sao_anime](https://x.com/sao_anime/status/1854402349412106416)&#13;
&#13;
2024 年 11 月 7 日 14:55&#13;
游戏已通关——&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://pbs.twimg.com/media/GbwoZNVbcAAHunh?format=jpg&amp;name=orig'&gt;`&#13;
&#13;
其它推文:&#13;
&#13;
https://x.com/sao_anime/status/1852274390312141212&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://pbs.twimg.com/media/Gbtc4f-aMAAIYZv?format=jpg&amp;name=orig'&gt;`。</description><guid isPermaLink="true">https://gjken.github.io/post/2.html</guid><pubDate>Tue, 12 Nov 2024 18:41:53 +0000</pubDate></item><item><title>Gmeek - 记录使用过程</title><link>https://gjken.github.io/post/1.html</link><description>[Gmeek](https://github.com/Meekdai/Gmeek) 博客完全依托 Github, 提供域名, 无需服务器, 比起传统的服务器建站更方便快捷.&#13;
&#13;
# 搭建博客&#13;
&#13;
**如何搭建博客我就不写了, 强烈建议看完[官方文档](https://blog.meekdai.com/tag.html#gmeek).**&#13;
&#13;
**这里主要记录一些 js 和 CSS 的修改.**&#13;
&#13;
&gt; [!WARNING]&#13;
&gt; 利用 Github Page 搭建的网站内容是完全公开的, 请注意不要上传自己的隐私!!!&#13;
&#13;
# Config.json 小妙用&#13;
&#13;
## subTitle - js插入&#13;
&#13;
代码:&#13;
&#13;
```json&#13;
'subTitle':'&lt;script&gt;document.getElementById('content').innerHTML = `&lt;div style='text-align: center;'&gt;&lt;p&gt;CV工程师,&lt;/p&gt;&lt;p&gt;一个又菜又爱玩, 喜欢瞎折腾的流浪者.&lt;/p&gt;&lt;/div&gt;`;&lt;/script&gt;',&#13;
```&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmPJLQrhBg9opKvbgNGqQaEopEKJnsH3thbH7wNbocp6VF'&gt;`&#13;
&#13;
从图中可以看到, 可用 js 插入 html 实现修改文字.&#13;
&#13;
## subTitle - 隐藏&#13;
&#13;
`'subTitle':' ',`&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/Qmei764zAMx9fXgotWbrrwizXRsrk42GGiKor2Zqo8hFgy'&gt;`&#13;
&#13;
可以用空白字符的方式, 隐藏 subTitle 必须字段, 无需使用 js 隐藏.&#13;
&#13;
# 记录功能块代码&#13;
&#13;
代码摘抄自网络, 有删改, 都存放在仓库, 使用 jsdelivr CDN 加速.&#13;
&#13;
## [ArticleToc.js](https://github.com/GJKen/gjken.github.io/blob/main/static/ArticleToc.js) - 文章增加目录列表+一键返回顶部按钮&#13;
&#13;
&gt; 来源: [Github](https://github.com/cao-gift/cao-gift.github.io?tab=readme-ov-file)&#13;
&gt; 修改-切换博客主题时颜色不一致, 增加滚动同步定位章节, 修改动画和样式.&#13;
&gt; 已知bug: 给body增加`backdrop-filter: blur(30px);`样式时, 会出现滚动错误. 待后续修复.&#13;
&#13;
图示:&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmZZc1AEpcDTUiasyp6qkGx4h2K7btob9U4c9RAgrTMnx1'&gt;`&#13;
&#13;
## Fancybox.js - 图片浏览器&#13;
&#13;
&gt; Fancybox [官网](https://www.fancyapps.com)&#13;
&#13;
### 安装 Fancybox&#13;
&#13;
给文章引用 CSS 和 JS 标签, 注意末尾的标点符号.&#13;
&#13;
我这里用的是`5.0`版本, cdn 加速链接.&#13;
&#13;
```json&#13;
'script':'&lt;script src='https://fastly.jsdelivr.net/gh/gjken/gjkdemo.github.io@main/static/ArticleCss.js'&gt;&lt;/script&gt;&lt;script src='https://fastly.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.umd.js'&gt;&lt;/script&gt;'&#13;
```&#13;
&#13;
`ArticleCss.js`的内容如下:&#13;
&#13;
```js&#13;
document.addEventListener('DOMContentLoaded', () =&gt; {&#13;
    document.head.appendChild(&#13;
        Object.assign(document.createElement('link'), {&#13;
            rel: 'stylesheet',&#13;
            href: 'https://fastly.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.css'&#13;
        })&#13;
    );&#13;
    Fancybox.bind('[data-fancybox='gallery']', {});&#13;
});&#13;
```&#13;
&#13;
意思是页面加载完成后, 加载 fancybox 所需的 CSS 文件, 同时增加 fancybox 必要的绑定函数.&#13;
&#13;
### 修改 Gmeek 仓库的 Gmeek.py&#13;
&#13;
打开`Gmeek.py`文件, 定位字符串`Gmeek-html`&#13;
&#13;
然后在下面增加代码:&#13;
&#13;
```python&#13;
if '&lt;code class='notranslate'&gt;Gmeek-imgbox' in post_body: &#13;
            post_body = re.sub(r'&lt;code class='notranslate'&gt;Gmeek-imgbox&amp;lt;img src='([^']+)'&amp;gt;&lt;/code&gt;', lambda match: f'&lt;img data-fancybox='gallery' data-src='{match.group(1)}' src='{match.group(1)}'&gt;', post_body, flags=re.DOTALL)&#13;
```&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmbnqZ2K74iZPmHgzAJKwro2uoH3Q3U1hbQanfPJpXfv4b'&gt;`&#13;
&#13;
### 示例使用&#13;
&#13;
在 markdown 插入图片:&#13;
&#13;
```html&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmbAZqtwu2G9vXrJ8oC7ixvKh4tY8uL8NvPA9zAxDqWFPq'&gt;`&#13;
```&#13;
&#13;
通过 Action 转换后实际效果如下, html 里面图片标签会增加 fancybox 所需的`data-fancybox='gallery'` 和 `data-src=''`属性.&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmXtNapJz2XijpRa9AQtrQYNGBY91MmnWa7H1SUF5CiZzN'&gt;`&#13;
&#13;
## [GmeekVercount_uv.js](https://github.com/GJKen/gjken.github.io/blob/main/static/GmeekVercount_uv.min.js) - 网站增加访客计数器&#13;
&#13;
&gt; Vercount [Github](https://github.com/EvanNotFound/vercount)&#13;
&gt; pv 修改成 uv 计数.&#13;
&#13;
建议放入`allHead`里全站添加 js.&#13;
&#13;
```json&#13;
'allHead':'&lt;script src='https://cdn.jsdelivr.net/gh/gjken/gjkdemo.github.io@main/static/GmeekVercount_uv.min.js'&gt;&lt;/script&gt;'&#13;
```&#13;
&#13;
## [ImgLazyLoad.js](https://github.com/GJKen/gjken.github.io/blob/main/static/ImgLazyLoad.js) - 图片懒加载&#13;
&#13;
&gt; 来源: [Github](https://github.com/liyifanniubi/liyifanniubi.github.io)&#13;
&#13;
未实际测试过.&#13;
&#13;
## [NumPagination.js](https://github.com/GJKen/gjken.github.io/blob/main/static/NumPagination.js) - 主页添加数字分页条&#13;
&#13;
&gt; 来源 [Github](https://github.com/liyifanniubi/liyifanniubi.github.io)&#13;
&#13;
未实际测试过.&#13;
&#13;
# 通过 primer.css, 修改博客样式&#13;
&#13;
[primer.css](https://github.com/GJKen/gjken.github.io/blob/main/static/primer.css), 这个文件用来控制网站的整体样式, 存放在我的 git 仓库, 使用 jsdelivr CDN 加速.&#13;
&#13;
对应的选择器只张贴出关键 CSS 部分的修改, ~~不然代码太多了.~~&#13;
&#13;
下面是修改笔记, 不一定实际使用.&#13;
&#13;
## \&lt;html&gt; 标签样式&#13;
&#13;
`[data-color-mode]`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&gt; 增加兼容性动画过渡.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode] {&#13;
    color: var(--fgColor-default, var(--color-fg-default));&#13;
    background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --html-bgColor: #151c2f;/* 增加 */&#13;
}&#13;
:root {&#13;
    --html-bgColor: #fff;/* 增加 */&#13;
}&#13;
[data-color-mode] {&#13;
	color: var(--fgColor-default, var(--color-fg-default));&#13;
	background-color: var(--html-bgColor);&#13;
	-webkit-transition: background-color 0.5s ease;/* 增加 */&#13;
	-moz-transition: background-color 0.5s ease;/* 增加 */&#13;
	-o-transition: background-color 0.5s ease;/* 增加 */&#13;
	transition: background-color 0.5s ease;/* 增加 */&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 博客滚动条样式&#13;
&#13;
直接增加下面代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```css&#13;
::-webkit-scrollbar {&#13;
    width: 8px;&#13;
    height: 8px;&#13;
}&#13;
&#13;
::-webkit-scrollbar-thumb {&#13;
    border-radius: 10px;&#13;
    background: #97d3ffa1;&#13;
}&#13;
::-webkit-scrollbar-thumb:hover {&#13;
	background: #81b5daa1;&#13;
}&#13;
&#13;
/* Firefox */&#13;
html {&#13;
    scrollbar-color: #97d3ffa1 transparent;&#13;
    scrollbar-width: thin;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## \#header 样式&#13;
&#13;
`#header`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改顶部为 flex 居中布局, 更加美观.&#13;
&gt; 修改头像 hover 样式.&#13;
&gt; 无论是博客首页还是文章页都能生效.&#13;
&gt; 直接增加下面代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```css&#13;
/* 优化header样式 */&#13;
#header {&#13;
    flex-direction: column !important;&#13;
    align-items: center !important;&#13;
    gap: 10px;&#13;
    padding-bottom: 0 !important;&#13;
    margin-bottom: 24px !important&#13;
}&#13;
&#13;
/* 优化头像样式 */&#13;
#header h1 {&#13;
    display: flex;&#13;
    flex-direction: column !important;&#13;
    align-items: center !important;&#13;
    gap: 15px&#13;
}&#13;
&#13;
#header h1 a {&#13;
    margin: unset !important;&#13;
}&#13;
&#13;
.avatar:hover {&#13;
    transform: scale(1.5) rotate(720deg) !important;&#13;
    box-shadow: 0 0 10px rgb(45 250 255 / 74%);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## \#header 图标样式&#13;
&#13;
`.btn-invisible:hover, .btn-invisible.zeroclipboard-is-hover`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改图标 hover 样式.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.btn-invisible:hover,&#13;
.btn-invisible.zeroclipboard-is-hover {&#13;
    background-color: var(--button-default-bgColor-hover, var(--color-btn-hover-bg));&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	/* 增加 */&#13;
	--title-right-btnbg-color: #46ffff61;&#13;
	--title-right-svg-color: #00f0ff;&#13;
}&#13;
:root {&#13;
	/* 增加 */&#13;
	--title-right-btnbg-color: #b7dbff61;&#13;
	--title-right-svg-color: #71baff;&#13;
}&#13;
.btn-invisible:hover,&#13;
.btn-invisible.zeroclipboard-is-hover {&#13;
	background-color: var(--title-right-btnbg-color);&#13;
}&#13;
/* 增加 */&#13;
.btn-invisible:hover svg,&#13;
.btn-invisible.zeroclipboard-is-hover svg {&#13;
    fill: var(--title-right-svg-color);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;blockquote&gt; 标签样式&#13;
&#13;
`.markdown-body blockquote`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改文字颜色, 适配 light &amp; dark 主题.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body blockquote {&#13;
	padding: 0 1em;&#13;
	color: var(--fgColor-muted, var(--color-fg-muted));&#13;
	border-left: .25em solid var(--borderColor-default, var(--color-border-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	/* 增加 */&#13;
	--markdown-blockquote-color: #ffffff8c;&#13;
	--markdown-blockquote-borderLeft-color: #bbbbbb8c;&#13;
}&#13;
:root {&#13;
	/* 增加 */&#13;
	--markdown-blockquote-color: #656d76;&#13;
	--markdown-blockquote-borderLeft-color: #d0d7de;&#13;
}&#13;
.markdown-body blockquote {&#13;
	padding: 0 1em;&#13;
	color: var(--markdown-blockquote-color);&#13;
	border-left: .25em solid var(--markdown-blockquote-borderLeft-color)&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 主页文章列表样式&#13;
&#13;
`.SideNav-item:last-child`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 直接移除这个选择器的所有样式.&#13;
&#13;
## 文章 \&lt;h1&gt; 标签样式&#13;
&#13;
`.markdown-body h1`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改字体大小1.85em.&#13;
&gt; 删除padding.&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h1 {&#13;
    padding-bottom: .3em;&#13;
    font-size: 2em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --markdown-h1-bgColor: #7dc2ff7a;/* 增加 */&#13;
}&#13;
:root {&#13;
    --markdown-h1-bgColor: #c8e5ff7a;/* 增加 */&#13;
}&#13;
.markdown-body h1 {&#13;
    background: var(--markdown-h1-bgColor);/* 增加 */&#13;
    border-radius: 6px;/* 增加 */&#13;
    font-size: 1.85em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted));&#13;
    border-left: .25em solid #32c7dd;/* 增加 */&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;h2&gt; 标签样式&#13;
&#13;
`.markdown-body h2`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 增加下划线动画.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h2 {&#13;
    padding-bottom: .3em;&#13;
    font-size: 1.5em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body h2 {&#13;
    font-size: 1.5em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted));&#13;
    background: linear-gradient(45deg, #90d1ff, transparent) no-repeat left bottom;&#13;
    background-size: 0 2px;&#13;
    -webkit-transition: all 0.25s ease;&#13;
    transition: all 0.25s ease;&#13;
}&#13;
/* 增加hover */&#13;
.markdown-body h2:hover {&#13;
    background-size: 100% 2px;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;img&gt; 标签样式&#13;
&#13;
`.markdown-body img`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&gt; 增加 hover 动画缩放和阴影.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body img {&#13;
	max-width: 100%;&#13;
	box-sizing: content-box;&#13;
	background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
/* 增加 */&#13;
.markdown-body p {&#13;
	position: relative;&#13;
	overflow: visible;&#13;
	clip-path: inset(0);&#13;
	-webkit-clip-path: inset(0);&#13;
}&#13;
.markdown-body img {&#13;
	max-width: 100%;&#13;
	box-sizing: content-box;&#13;
	transition: transform 0.3s ease, clip-path 0.3s ease;/* 增加 */&#13;
	-webkit-transition: -webkit-transform 0.3s ease, -webkit-clip-path 0.3s ease;/* 增加 */&#13;
}&#13;
/* 增加 */&#13;
.markdown-body img:hover {&#13;
	transform: scale(1.01);&#13;
	clip-path: inset(-4%);&#13;
	cursor: zoom-in;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;code&gt; 标签样式&#13;
&#13;
`.markdown-body code, .markdown-body tt`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body code,&#13;
.markdown-body tt {&#13;
	background-color: var(--bgColor-neutral-muted, var(--color-neutral-muted));&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	--markdown-code-bgColor: #3bf6ff52;/* 增加 */&#13;
}&#13;
:root {&#13;
	--markdown-code-bgColor: #4d4d4d38;/* 增加 */&#13;
}&#13;
.markdown-body code,&#13;
.markdown-body tt {&#13;
	background-color: var(--markdown-code-bgColor);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章代码块样式&#13;
&#13;
`.markdown-body .highlight pre, .markdown-body pre {`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
.markdown-body .highlight pre,&#13;
.markdown-body pre {&#13;
	background-color: var(--bgColor-muted, var(--color-canvas-subtle));&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	--markdown-pre-bgColor: #27282d;/* 增加 */&#13;
}&#13;
:root {&#13;
	--markdown-pre-bgColor: #f6f8fa;/* 增加 */&#13;
}&#13;
.markdown-body .highlight pre,&#13;
.markdown-body pre {&#13;
	background-color: var(--markdown-pre-bgColor);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章一键复制代码按钮样式&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 给按钮增加 hover 动画, 使其显示&amp;隐藏一键复制按钮.&#13;
&gt; 直接增加下面代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```css&#13;
/* 一键复制hover出入动画 */&#13;
.clipboard-container {&#13;
	opacity: 0;&#13;
	visibility: hidden;&#13;
	pointer-events: none;&#13;
	transition: opacity 0.3s ease, visibility 0s 0.3s;&#13;
	-webkit-transition: opacity 0.3s ease, visibility 0s 0.3s&#13;
}&#13;
&#13;
.highlight:hover .clipboard-container {&#13;
	opacity: 1;&#13;
	visibility: visible;&#13;
	pointer-events: auto;&#13;
	transition: opacity 0.3s ease, visibility 0s 0s;&#13;
	-webkit-transition: opacity 0.3s ease, visibility 0s 0s&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;a&gt; 标签样式&#13;
&#13;
`a`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&gt; 去掉原下划线, 增加下划线动画.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --color-accent-fg: #2f81f7;&#13;
}&#13;
/* 这条在12345行左右出现 */&#13;
a {&#13;
	background-color: rgba(0, 0, 0, 0)&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```css&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --color-accent-fg: #20d4ff;&#13;
}&#13;
/* &#13;
这条在12345行左右出现&#13;
增加&#13;
*/&#13;
a {&#13;
	background: #90d1ff;&#13;
	background: linear-gradient(#90d1ff, #90d1ff) no-repeat left bottom;&#13;
	background-size: 0 2px;&#13;
	transition: all 0.25s ease;&#13;
	-webkit-transition: all 0.25s ease;&#13;
}&#13;
/* 增加 */&#13;
.markdown-body a:hover {&#13;
	background-size: 100% 2px;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
# 通过 Gmeek 仓库 DIY 博客&#13;
&#13;
为什么这样做? ~~自娱自乐.~~&#13;
&#13;
## Fork Gmeek 仓库&#13;
&#13;
仓库地址👉 https://github.com/Meekdai/Gmeek&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmaJMN2pqoQwtA3c8bPbajkwWYAwaAcwbzUqBiXya836PV'&gt;`&#13;
&#13;
fork 之后, 转到搭建博客的 github 源码,&#13;
&#13;
打开`.github/workflows/Gmeek.yml`文件, 修改构建博客仓库的地址为你自己的仓库地址&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmNa2H5MrVphqpUwAHWBv7iWw782HmDb7qjZb3JEzdjQav'&gt;`&#13;
&#13;
打开`config.json`文件, 修改右边字段值为main`'GMEEK_VERSION':'main'`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 如果值是`last`的话, Action 会失败, 因为默认值`last`是靠源码仓库(Gmeek)的 tag 来构建的, 改成 main 就不会构建失败.&#13;
&gt; ~~创建新的 tag 也可以, 但是挺麻烦.~~&#13;
&#13;
## 修改网站下方的文字&#13;
&#13;
打开`Gmeek.py`&#13;
&#13;
下图文字直接修改即可, 不同语言的按需修改.&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmaxN6phAHJsxfB5Q3xLCGdAwpq2CcoNLo4xoFB16DpzAs'&gt;`&#13;
&#13;
## 修改默认 primer.css 链接&#13;
&#13;
打开`Gmeek.py`&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmWcdviYe3A5bmtjCjhFeFA8VaczcvTQ2HDMB5aUAnkg3v'&gt;`&#13;
&#13;
这里我直接写改成我存放的链接 https://gjken.github.io/primer.css&#13;
&#13;
## 修改页面头部样式&#13;
&#13;
### 打开 post.html 文件&#13;
&#13;
定位样式`.title-right`, 其内容全部修改为flex布局👉`.title-right{display:flex;}`&#13;
&#13;
增加样式`.title-left{display: flex;flex-direction: column;align-items: center;gap: 20px;}`&#13;
&#13;
定位样式`.title-left a`, 删除`margin-left:8px;`(设置flex布局之后取消图标多余的间距, 样式则通过 &lt;a href='## \#header 图标样式'&gt;primer.css&lt;/a&gt; 来修改.)&#13;
&#13;
定位样式`.title-right .circle`, 删除`margin-right:8px;`(和上面一样, 删除多余间距.)&#13;
&#13;
定位样式`.avatar:hover`,其内容全部修改为👉`.avatar:hover {transform: scale(1.5) rotate(720deg);box-shadow: 0 0 10px rgb(45 250 255 / 74%);}`&#13;
&#13;
### 打开 plist.html 文件&#13;
&#13;
定位样式`.title-right .circle`, 删除`margin-right:8px;`(和上面一样, 删除多余间距.)&#13;
&#13;
到这里我的自定义 header 就修改完成了, 其它的样式可到 primer.css 里修改.&#13;
&#13;
## 修改[警报强调信息]样式&#13;
&#13;
打开`Gmeek.py`&#13;
&#13;
定位代码`markdown-alert-{alert}`&#13;
&#13;
&gt; 增加圆角6px.&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/Qmen4szA7gJFZYiiXU7xcU2dqTfWyyCdEu619PCJCHtMQS'&gt;`&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/QmZpTsgv2gCosiy6VRuckx59U1yiLfyTMqxkbXHivWmusW'&gt;`&#13;
&#13;
## 页面底部文字增加图标动画&#13;
&#13;
增加爱心图标动画.&#13;
&#13;
打开`footer.html`&#13;
&#13;
在`&lt;span id='runday'&gt;`前面插入下面一行 SVG 图标.&#13;
&#13;
```html&#13;
&lt;svg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg' style='margin-right: 4px;height:18px;vertical-align: bottom;fill: #ff5a5a;'class='animate_heartBeatScale'&gt;&lt;path d='M1017.152 426.592a263.296 263.296 0 0 0-502.304-133.92 263.328 263.328 0 0 0-502.304 133.92s5.152 259.264 505.536 520.096c500.32-260.832 499.072-520.096 499.072-520.096zM282.016 194.976a43.2 43.2 0 1 1 .096 86.4 43.2 43.2 0 0 1-.096-86.4zm-135.04 323.232a45.12 45.12 0 0 1-55.488-31.328 289.472 289.472 0 0 1-10.816-66.592C76.64 313.824 142.24 261.472 145.504 258.88a45.024 45.024 0 0 1 63.2 8.032c15.168 19.488 11.744 47.36-7.328 62.72-2.336 1.952-30.784 27.52-30.592 82.24.096 14.752 2.208 31.616 7.488 50.784a45.12 45.12 0 0 1-31.296 55.552z'/&gt;&lt;/svg&gt;&#13;
```&#13;
&#13;
打开`primer.css`&#13;
&#13;
直接增加动画 CSS 代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```css&#13;
@keyframes heartBeatScale  {&#13;
	0% {&#13;
		-webkit-transform: scale(1);&#13;
		transform: scale(1)&#13;
	}&#13;
&#13;
	14% {&#13;
		-webkit-transform: scale(1.3);&#13;
		transform: scale(1.3)&#13;
	}&#13;
&#13;
	28% {&#13;
		-webkit-transform: scale(1);&#13;
		transform: scale(1)&#13;
	}&#13;
&#13;
	42% {&#13;
		-webkit-transform: scale(1.3);&#13;
		transform: scale(1.3)&#13;
	}&#13;
&#13;
	70% {&#13;
		-webkit-transform: scale(1);&#13;
		transform: scale(1)&#13;
	}&#13;
}&#13;
@keyframes heartBeatColor {&#13;
    0%, 28%, 70%, 100% {&#13;
        fill: #ff5a5a; /* 初始颜色 */&#13;
    }&#13;
    14%, 42% {&#13;
        fill: red; /* 放大时颜色变化 */&#13;
    }&#13;
}&#13;
&#13;
.animate_heartBeatScale {&#13;
	animation: heartBeatScale 1.3s infinite ease-in-out, heartBeatColor 1.3s infinite ease-in-out;&#13;
	-webkit-animation: heartBeatScale 1.3s infinite ease-in-out, heartBeatColor 1.3s infinite ease-in-out;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-imgbox&lt;img src='https://i0.img2ipfs.com/ipfs/Qmb3JmVReGPYgCiwmgYQtuurn67FXZ3m4dGtw83aM5nSQH'&gt;`&#13;
&#13;
# 使用 Gmeek-html, 给博客插入图片, 防止链接自动转换&#13;
&#13;
Github 在 issues 插入的图片也会自动转换为 Github 的地址.&#13;
&#13;
为了文章的多样性, 在 Gmeek 的`v2.19`版本中添加了支持 html 标签的功能.&#13;
&#13;
示例代码:&#13;
&#13;
```html&#13;
`Gmeek-html&lt;img src='https://i0.img2ipfs.com/ipfs/QmbAZqtwu2G9vXrJ8oC7ixvKh4tY8uL8NvPA9zAxDqWFPq'&gt;`&#13;
```&#13;
&#13;
效果图:&#13;
&#13;
`Gmeek-html&lt;img src='https://i0.img2ipfs.com/ipfs/QmbAZqtwu2G9vXrJ8oC7ixvKh4tY8uL8NvPA9zAxDqWFPq'&gt;`&#13;
&#13;
&gt; [!Important]&#13;
&gt; 如果在文章中含有代码块标签并且内容为Gmeek-html, Action 那边会进行转换导致显示错误, 详情看[#201](https://github.com/Meekdai/Gmeek/issues/201)&#13;
&gt; `gmeek-html` 换成小写就没事了.&#13;
&#13;
# 优化 Gmeek-html, 标签转换匹配&#13;
&#13;
打开`Gmeek.py`&#13;
&#13;
定位字符串`gmeek-html`&#13;
&#13;
替换成下面的代码:&#13;
&#13;
```python&#13;
if '&lt;code class='notranslate'&gt;Gmeek-html' in post_body:&#13;
            post_body = re.sub(r'&lt;code class='notranslate'&gt;Gmeek-html(&amp;lt;.*?&amp;gt;)&lt;/code&gt;', lambda match: html.unescape(match.group(1)), post_body, flags=re.DOTALL)&#13;
```&#13;
&#13;
原先匹配的内容为:`&lt;code class='notranslate'&gt;Gmeek-html(.*?)&lt;/code&gt;`, 这样会导致转换文章内容时出现显示错误.&#13;
&#13;
更改后缩小了匹配范围, 可以直接使用`Gmeek-html`让其在文章内正常显示.&#13;
&#13;
# 添加自定义单篇文章代码&#13;
&#13;
```html&#13;
&lt;span id='busuanzi'&gt;&#13;
:heart:感谢第&lt;span&gt;&lt;/span&gt;小伙伴的&lt;span&gt;&lt;/span&gt;次访问关于页面.&#13;
&lt;/span&gt;&#13;
&#13;
&lt;!-- ##{'script':'&lt;script&gt;document.getElementById('user-content-busuanzi').id='busuanzi_container_site_uv';busuanzi=document.getElementById('busuanzi_container_site_uv');busuanzi.style.display='none';busuanzi.childNodes[1].id='busuanzi_value_site_uv';busuanzi.childNodes[3].id='busuanzi_value_site_pv';&lt;/script&gt;&lt;script async src='//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js'&gt;&lt;/script&gt;','style':'&lt;style&gt;#busuanzi_value_site_uv{color:red}#busuanzi_value_site_pv{color:red}&lt;/style&gt;'}## --&gt;&#13;
```&#13;
&#13;
# Issues Label 备份&#13;
&#13;
| Label Name | Color | 效果&#13;
|-|-|-&#13;
| 网站 | #218155 | ![Badge](https://img.shields.io/badge/%E7%BD%91%E7%AB%99-%237057FF-7057FF)&#13;
| 日常 | #008672 | ![Badge](https://img.shields.io/badge/%E6%97%A5%E5%B8%B8-%23008672-008672)&#13;
| 教程 | #0075ca | ![Badge](https://img.shields.io/badge/%E6%95%99%E7%A8%8B-%230075CA-0075CA)&#13;
| Anime | #E77AB1 | ![Badge](https://img.shields.io/badge/Anime-%23E77AB1-E77AB1)&#13;
| Win  | #5AB3F3 | ![Badge](https://img.shields.io/badge/Win-%235AB3F3-5AB3F3)&#13;
| JS | #AD3152 | ![Static Badge](https://img.shields.io/badge/JS-%23AD3152-AD3152)&#13;
| CSS | #AD3152 | ![Badge](https://img.shields.io/badge/CSS-%23218155-218155)&#13;
| Github | #333333 | ![Static Badge](https://img.shields.io/badge/Github-%23333333-333333)&#13;
| CDN | #cb222c | ![Badge](https://img.shields.io/badge/CDN-%23cb222c-cb222c)&#13;
| Bug | #D73A4A | ![Static Badge](https://img.shields.io/badge/Bug-%23D73A4A-D73A4A)&#13;
&#13;
# Readme.md&#13;
&#13;
📄 &gt; 文章总数&#13;
💬 &gt; 评论总数&#13;
🌺 &gt; 是统计的所有文章的字符数&#13;
⏰ &gt; 最后一次 Actions 的时间。</description><guid isPermaLink="true">https://gjken.github.io/post/1.html</guid><pubDate>Sun, 10 Nov 2024 16:22:46 +0000</pubDate></item></channel></rss>